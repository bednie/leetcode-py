from typing import List


class Solution:
    def maxPoints(self, points: List[List[int]]) -> int:
        if len(points) < 3:
            return len(points)

        lines = {}  # (float("inf"), x) or (0, y) or (slope, y_int)
        max_points = 0
        for i in range(0, len(points)):
            for j in range(0, len(points)):
                if i != j:
                    rise = points[j][1] - points[i][1]
                    run = points[j][0] - points[i][0]

                    if run != 0:
                        slope = round((rise / run), 2)
                    else:
                        slope = float("inf")

                    y_int = points[j][1] - (slope * points[j][0])

                    if (slope, points[j][0]) in lines:
                        continue
                    if slope == float("inf"):
                        lines[(slope, points[j][0])] = 0
                    elif slope == 0:
                        lines[(0, points[j][1])] = 0
                    else:
                        lines[(slope, y_int)] = 0

        for point in points:
            for line in lines:
                if line[0] == float("inf"):
                    if point[0] == line[1]:
                        lines[line] += 1
                elif line[0] == 0:
                    if point[1] == line[1]:
                        lines[line] += 1
                else:
                    if point[1] == line[0] * point[0] + line[1]:
                        lines[line] += 1

                max_points = max(max_points, lines[line])

        return max_points
